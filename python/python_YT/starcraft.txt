from random import *

class Unit:
    def __init__(self, name, hp, speed):
        self.name=name
        self.hp=hp
        self.speed=speed
        print("{0} 유닛이 생성되었습니다.".format(self.name))

    def move(self, location):
        print("[지상 유닛 이동]")
        print("{0} : {1} 방향으로 이동합니다. [속도 {2}]".format(self.name, location, self.speed))

    def damaged(self, damage):
        self.hp-= damage
        print("{0}이 {1}을 받아서 현재 체력{2}입니다.".format(self.name, damage, self.hp))
        if self.hp<=0:
            print("{0}이 파괴되었습니다.".format(self.name))

class AttackUnit(Unit):
    def __init__(self, name, hp, speed, damage):
        Unit.__init__(self,name,hp,speed)
        self.damage=damage
        print("체력은 {0}, 공격력은 {1}".format(self.hp, self.damage))
    def attack(self, location):
        print("{0}:{1} 방향으로 공격합니다.".format(self.name, location))


class Marine(AttackUnit):
    def __init__(self):
        AttackUnit.__init__(self, "marine", 40, 1, 5)

    def steampack(self):
        if self.hp>10:
            self.hp -= 10
            print("{0} 유닛이 스팀팩을 활용합니다. HP 10 감소".format(self.name))
        else :
            print("{0} 유닛 체력이 부족하여 스팀팩을 활용하지 않습니다.".format(self.name))

class Tank(AttackUnit):
    seize_developed = False

    def __init__(self):
        AttackUnit.__init__(self, "tank", 150, 1, 35)
        self.seize_mode = False

    def set_seize(self):
        if Tank.seize_developed == False :
            return
        if self.seize_mode == False:
            print("{0}가 시즈모드로 전환합니다. ".format(self.name))
            self.damage *= 2
            self.seize_mode= True
        else :
            print("{0}가 시즈모드를 해제합니다. ".format(self.name))
            self.damage /= 2
            self.seize_mode = False


class FlyUnit:
    def __init__(self, flyspeed):
        self.flyspeed=flyspeed
    def fly(self, name, location):
        print("{0} : {1} 방향으로 날아갑니다. [속도 {2}]".format(name, location, self.flyspeed))



class FlyAttackUnit(AttackUnit, FlyUnit):
    def __init__(self, name, hp, speed, damage, flyspeed):
        AttackUnit.__init__(self, name, hp, 0, damage)
        FlyUnit.__init__(self, flyspeed)
    def move(self, location):
        self.fly(self.name, location)

class Wraith(FlyAttackUnit):
    def __init__(self):
        FlyAttackUnit.__init__(self, "레이스", 80, 20, 5, 5)
        self.clocking = 0

    def clock(self):
        if self.clocking == 1:
            print("{0}가 클로킹 모드를 해제합니다.".format(self.name))
            self.clocking = 0
        else:
            print("{0}가 클로킹 모드로 돌입합니다.".format(self.name))
            self.clocking = 1


def game_start():
    print("[알림] 새로운 게임을 시작합니다.")

def game_over():
    print("Player : gg")
    print("[알림] 게임이 종료되었습니다.")

game_start()

m1=Marine()
m2=Marine()
m3=Marine()

t1=Tank()
t2=Tank()

w1=Wraith()

attack_units=[]
attack_units.append(t1)
attack_units.append(t2)
attack_units.append(w1)
attack_units.append(m1)
attack_units.append(m2)
attack_units.append(m3)


for unit in attack_units:
    unit.move("1시")

Tank.seize_developed=True
print("[알림] 탱크 시즈모드 개발이 완료되었습니다.")

for unit in attack_units:
    if isinstance(unit, Marine):
        unit.steampack()
    elif isinstance(unit, Tank):
        unit.set_seize()
    elif isinstance(unit, Wraith):
        unit.clock()

for unit in attack_units:
    unit.attack("1시")

for unit in attack_units:
    unit.damaged(randint(5,21))

game_over()